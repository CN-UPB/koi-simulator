//
// Generated file, do not edit! Created by opp_msgc 4.3 from VisibilityRegionMessage.msg.
//

#ifndef _VISIBILITYREGIONMESSAGE_M_H_
#define _VISIBILITYREGIONMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "VisibilityRegion.h"
// }}



/**
 * Class generated from <tt>VisibilityRegionMessage.msg</tt> by opp_msgc.
 * <pre>
 * message VisibilityRegionMessage  {
 * 	VisibilityRegion vr;
 * }
 * </pre>
 */
class VisibilityRegionMessage : public ::cMessage
{
  protected:
    VisibilityRegion vr_var;

  private:
    void copy(const VisibilityRegionMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const VisibilityRegionMessage&);

  public:
    VisibilityRegionMessage(const char *name=NULL, int kind=0);
    VisibilityRegionMessage(const VisibilityRegionMessage& other);
    virtual ~VisibilityRegionMessage();
    VisibilityRegionMessage& operator=(const VisibilityRegionMessage& other);
    virtual VisibilityRegionMessage *dup() const {return new VisibilityRegionMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual VisibilityRegion& getVr();
    virtual const VisibilityRegion& getVr() const {return const_cast<VisibilityRegionMessage*>(this)->getVr();}
    virtual void setVr(const VisibilityRegion& vr);
};

inline void doPacking(cCommBuffer *b, VisibilityRegionMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, VisibilityRegionMessage& obj) {obj.parsimUnpack(b);}


#endif // _VISIBILITYREGIONMESSAGE_M_H_
