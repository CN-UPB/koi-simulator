//
// Generated file, do not edit! Created by opp_msgc 4.3 from PointerExchange.msg.
//

#ifndef _POINTEREXCHANGE_M_H_
#define _POINTEREXCHANGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "PtrExchange.h"
// }}



/**
 * Class generated from <tt>PointerExchange.msg</tt> by opp_msgc.
 * <pre>
 * message PointerExchange  {
 * 	PtrExchange ptr;
 * }
 * </pre>
 */
class PointerExchange : public ::cMessage
{
  protected:
    PtrExchange ptr_var;

  private:
    void copy(const PointerExchange& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PointerExchange&);

  public:
    PointerExchange(const char *name=NULL, int kind=0);
    PointerExchange(const PointerExchange& other);
    virtual ~PointerExchange();
    PointerExchange& operator=(const PointerExchange& other);
    virtual PointerExchange *dup() const {return new PointerExchange(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual PtrExchange& getPtr();
    virtual const PtrExchange& getPtr() const {return const_cast<PointerExchange*>(this)->getPtr();}
    virtual void setPtr(const PtrExchange& ptr);
};

inline void doPacking(cCommBuffer *b, PointerExchange& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, PointerExchange& obj) {obj.parsimUnpack(b);}


#endif // _POINTEREXCHANGE_M_H_
