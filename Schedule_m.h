//
// Generated file, do not edit! Created by opp_msgc 4.3 from Schedule.msg.
//

#ifndef _SCHEDULE_M_H_
#define _SCHEDULE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Schedule.msg</tt> by opp_msgc.
 * <pre>
 * message Schedule  {
 *     int ScheduleDirection;
 *     double maxPower;
 *     double powerAdaptation[];
 *     int bsId;
 *     int upSchedule[];   
 *     int channel;
 * }
 * </pre>
 */
class Schedule : public ::cMessage
{
  protected:
    int ScheduleDirection_var;
    double maxPower_var;
    double *powerAdaptation_var; // array ptr
    unsigned int powerAdaptation_arraysize;
    int bsId_var;
    int *upSchedule_var; // array ptr
    unsigned int upSchedule_arraysize;
    int channel_var;

  private:
    void copy(const Schedule& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Schedule&);

  public:
    Schedule(const char *name=NULL, int kind=0);
    Schedule(const Schedule& other);
    virtual ~Schedule();
    Schedule& operator=(const Schedule& other);
    virtual Schedule *dup() const {return new Schedule(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getScheduleDirection() const;
    virtual void setScheduleDirection(int ScheduleDirection);
    virtual double getMaxPower() const;
    virtual void setMaxPower(double maxPower);
    virtual void setPowerAdaptationArraySize(unsigned int size);
    virtual unsigned int getPowerAdaptationArraySize() const;
    virtual double getPowerAdaptation(unsigned int k) const;
    virtual void setPowerAdaptation(unsigned int k, double powerAdaptation);
    virtual int getBsId() const;
    virtual void setBsId(int bsId);
    virtual void setUpScheduleArraySize(unsigned int size);
    virtual unsigned int getUpScheduleArraySize() const;
    virtual int getUpSchedule(unsigned int k) const;
    virtual void setUpSchedule(unsigned int k, int upSchedule);
    virtual int getChannel() const;
    virtual void setChannel(int channel);
};

inline void doPacking(cCommBuffer *b, Schedule& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Schedule& obj) {obj.parsimUnpack(b);}


#endif // _SCHEDULE_M_H_
