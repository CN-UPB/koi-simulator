//
// Generated file, do not edit! Created by opp_msgc 4.3 from DataPacketBundle.msg.
//

#ifndef _DATAPACKETBUNDLE_M_H_
#define _DATAPACKETBUNDLE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "DataPacket_m.h"
// }}



/**
 * Class generated from <tt>DataPacketBundle.msg</tt> by opp_msgc.
 * <pre>
 * message DataPacketBundle  {
 *     int msId;
 *     int bsId;
 * 	DataPacket packets[];
 * 	int RBs[];
 * 	int cqi;
 * }
 * </pre>
 */
class DataPacketBundle : public ::cMessage
{
  protected:
    int msId_var;
    int bsId_var;
    DataPacket *packets_var; // array ptr
    unsigned int packets_arraysize;
    int *RBs_var; // array ptr
    unsigned int RBs_arraysize;
    int cqi_var;

  private:
    void copy(const DataPacketBundle& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DataPacketBundle&);

  public:
    DataPacketBundle(const char *name=NULL, int kind=0);
    DataPacketBundle(const DataPacketBundle& other);
    virtual ~DataPacketBundle();
    DataPacketBundle& operator=(const DataPacketBundle& other);
    virtual DataPacketBundle *dup() const {return new DataPacketBundle(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getMsId() const;
    virtual void setMsId(int msId);
    virtual int getBsId() const;
    virtual void setBsId(int bsId);
    virtual void setPacketsArraySize(unsigned int size);
    virtual unsigned int getPacketsArraySize() const;
    virtual DataPacket& getPackets(unsigned int k);
    virtual const DataPacket& getPackets(unsigned int k) const {return const_cast<DataPacketBundle*>(this)->getPackets(k);}
    virtual void setPackets(unsigned int k, const DataPacket& packets);
    virtual void setRBsArraySize(unsigned int size);
    virtual unsigned int getRBsArraySize() const;
    virtual int getRBs(unsigned int k) const;
    virtual void setRBs(unsigned int k, int RBs);
    virtual int getCqi() const;
    virtual void setCqi(int cqi);
};

inline void doPacking(cCommBuffer *b, DataPacketBundle& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, DataPacketBundle& obj) {obj.parsimUnpack(b);}


#endif // _DATAPACKETBUNDLE_M_H_
